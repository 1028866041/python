#jupyter notebook
import numpy as np

np.array([1,2]).dtype
np.array([1,2]).shape
np.zeros([2,3])
np.ones([2,3])
np.full((1,2),0)
np.eye(3)
np.random.random([3,4])

np.array([[1,2,3],[4,5,6]])
np.array([1,2,2]).shape
np.array([[1,2,3],[4,5,6]])[np.arange(2),1]+=1
np.arange(2,3)

np.array([1,1,2,2]).dtype
np.array([1,2,2]).dtype

np.array([1,1,2.6], dtype=np.int64)
np.array([1,2], dtype=np.int64)
np.array([1,1,2.6], dtype=np.float)
np.array([1,2],dtype=np.int64)

np.add(np.array([[1,2],[3,4]]), np.array([[5,6],[7,8]]))
np.subtract(np.array([[1,2],[3,4]]),np.array([[5,6],[7,8]]))
np.multiply(np.array([[1,2],[3,4]]),np.array([[5,6],[7,8]]))
np.divide(np.array([[1,2],[3,4]]),np.array([[5,6],[7,8]]))
np.sqrt(np.array([[1,2],[3,4]]))

np.array([[1,2],[3,4]]).dot(np.array([[5,6,9],[7,8,10]]))
np.dot(np.array([[1,2],[3,4]]), np.array([[5,6,9],[7,8,10]]))

np.sum(np.array([[1,2],[3,4]]),axis=0)
np.mean(np.array([[1,2],[3,4]]),axis=1)

np.random.uniform(3,4)

np.tile(np.array([[1,2],[3,4]]),(2,3))
np.array([[1,2,3,4],[5,6,7,8]]).argsort(axis=1)
np.transpose(np.array([[1,2,3,4],[5,6,7,8]]))

x=np.array([[2,4,6],[3,5,7],[8,9,10]])
y=np.array([1,2,3])
for i in range(3):
    x[i,:] += y
#brodcast:
x+np.tile(y,(3,1))
x+y